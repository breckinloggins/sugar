- 
Sugar Prelude Bootstrap File

(c) 2012 Breckin Loggins

The very first character in this file represents the "ignore" character.  Every time
Sugar sees this character, it ignores all input until it sees it again.  Thus, the 
first syntactic construct we have is a comment.

The next two characters after the end of this comment define the command (op) trigger
character, and the quoting character, respectively.

After that, we teach Sugar about whitespace.  Sugar will read a set of characters and
add each one as a whitespace reader.  It will continue until it sees a character you 
have already defined as whitespace.  Thus the literal characters after the quote are
SPC TAB NEWLINE SPC.  The following hyphen starts the next comment...

-!` 	
 - 
At this point the compiler has a notion of a "symbol".  A symbol is a collection of
one or more contiguous non whitespace characters.  The environment already has several
symbols bound to opcodes, types, and readers, so we now have enough syntax to execute
commands and create macros. 
-
#				- The symbol we'll bind this macro to -
`symbol
`!reader
`!read			- Invoke the symbol reader -
`!reader
`!read			- Invoke the reader by the given symbol -
!createmacro	- Create the macro with the quoted stack contents -
!set			- Set the macro binding to the # character -

	